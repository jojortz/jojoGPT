// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  likeIds        String[]  @db.ObjectId

  accounts       Account[]
  posts          Post[]
  conversations  Conversation[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime @default(now())
  category      String
  likes         String[] @db.ObjectId
  userId        String   @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Conversation {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String   @db.ObjectId
  messages      Message[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Message {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  sent           Boolean
  body           String
  conversationId String @db.ObjectId
  createdAt      DateTime @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}